# EXAMPLE CONFIGURATION FILE FOR IMPORTING FROM THE WEATHER UNDERGROUND
#
# Copyright (c) 2009-2024 Tom Keffer <tkeffer@gmail.com> and Gary Roderick.
# See the file LICENSE.txt for your rights.

##############################################################################

# Specify the source. Available options are:
#   CSV - import obs from a single CSV format file
#   WU - import obs from a Weather Underground PWS history
#   Cumulus - import obs from a one or more Cumulus monthly log files
#   WD - import obs from a one or more WD monthly log files
#   WeatherCat - import obs from one or more WeatherCat monthly .cat files
# Format is:
#   source = (CSV | WU | Cumulus | WD | WeatherCat)
source = WU

##############################################################################

[WU]
    # Parameters used when importing from a WU PWS

    # WU PWS Station ID to be used for import.
    station_id = XXXXXXXX123

    # WU API key to be used for import.
    api_key = XXXXXXXXXXXXXXXXXXXXXX1234567890

    # How will the interval field be determined for the imported records.
    # Available options are:
    #   derive - Derive the interval field from the timestamp of successive
    #            records. This setting is best used when there are no missing
    #            records from period being imported. Missing records will cause
    #            the interval field to be incorrectly calculated for some
    #            records.
    #   conf   - Use the interval setting from weewx.conf. This setting is best
    #            used if the records to be imported have been produced by WeeWX
    #            or some other means with the same archive interval as set in
    #            weewx.conf on this machine.
    #   x      - Use a fixed interval of 'x' minutes for every record where 'x'
    #            is a number. This setting is best used if the records to be
    #            imported are equally spaced in time but there are some missing
    #            records.
    #
    # Due to WU frequently missing uploaded records, use of 'derive' may give
    # incorrect or inconsistent interval values. Better results may be achieved
    # by using the 'conf' setting (if WeeWX has been doing the WU uploading and
    # the WeeWX archive_interval matches the WU observation spacing in time) or
    # setting the interval to a fixed value (eg 5). The most appropriate
    # setting will depend on the completeness and (time) accuracy of the WU
    # data being imported.
    # Format is:
    #   interval = (derive | conf | x)
    # Default is derive.
    interval = derive

    # Should the [StdQC] max/min limits in weewx.conf be applied to the
    # imported data. This may be useful if the source has extreme values that
    # are clearly incorrect for some observations. This is particularly useful
    # for WU imports where WU often records clearly erroneous values against
    # obs that are not reported. Available options are:
    #   True  - weewx.conf [StdQC] max/min limits are applied.
    #   False - weewx.conf [StdQC] max/min limits are not applied.
    # Format is:
    #   qc = (True | False)
    # Default is True.
    qc = True

    # Should any missing derived observations be calculated from the imported
    # data if possible. Available options are:
    #   True  - Any missing derived observations are calculated.
    #   False - Any missing derived observations are not calculated.
    # Format is:
    #   calc_missing = (True | False)
    # Default is True.
    calc_missing = True

    # Specify how imported data fields that contain invalid data (eg a numeric
    # field containing non-numeric data) are handled. Available options are:
    #   True  - The invalid data is ignored, the WeeWX target field is set to
    #           None and the import continues.
    #   False - The import is halted.
    # Format is:
    #   ignore_invalid_data = (True | False)
    # Default is True.
    ignore_invalid_data = True

    # Imported records are written to archive in transactions of 'tranche'
    # records at a time. Increase for faster throughput, decrease to reduce
    # memory requirements. Format is:
    #   tranche = x
    # where x is an integer
    # Default is 250.
    tranche = 250

    # Lower and upper bounds for imported wind direction. It is possible,
    # particularly for a calculated direction, to have a value (eg -45) outside
    # of the WeeWX limits (0 to 360 inclusive). Format is:
    #
    # wind_direction = lower,upper
    #
    # where :
    #   lower is the lower limit of acceptable wind direction in degrees
    #   (may be negative)
    #   upper is the upper limit of acceptable wind direction in degrees
    #
    # WU has at times been known to store large values (eg -9999) for wind
    # direction, often no wind direction was uploaded to WU. The wind_direction
    # parameter sets a lower and upper bound for valid wind direction values.
    # Values inside these bounds are normalised to the range 0 to 360. Values
    # outside of the bounds will be stored as None. Default is 0,360
    # Default is -360,360.
    wind_direction = 0,360

    # Simplified map of WU fields to WeeWX archive fields. Format for each map
    # entry is:
    #
    #   [[[weewx_archive_field_name]]]
    #       source_field = wu_field_name
    #
    # where:
    #   weewx_archive_field_name - An observation name in the WeeWX database
    #                              schema.
    #   source_field             - Config option specifying the WU field being
    #                              mapped.
    #   wu_field_name            - The name of a WU field.
    # For example,
    #   [[[outTemp]]]
    #       source_field = tempAvg
    # would map the WU field 'tempAvg' to the WeeWX archive field 'outTemp'.
    #
    # A mapping for WeeWX field 'dateTime' is mandatory. For example,
    #   [[[dateTime]]]
    #       source_field = epoch
    # would map the WU field 'epoch' to the WeeWX 'dateTime' field.
    #
    # WeeWX archive fields that do not exist in the WU data may be omitted. Any
    # omitted fields that are derived (eg 'dewpoint') may be calculated during
    # import using the equivalent of the WeeWX StdWXCalculate service through
    # setting the 'calc-missing' parameter above.
    #
    # An example field map stanza is provided below that should suit most users
    # but can be tailored to suit specific needs.
    [[FieldMap]]
        [[[dateTime]]]
            source_field = epoch 
        [[[outTemp]]]
            source_field = tempAvg 
        [[[outHumidity]]]
            source_field = humidityAvg 
        [[[dewpoint]]]
            source_field = dewptAvg 
        [[[heatindex]]]
            source_field = heatindexAvg 
        [[[windchill]]]
            source_field = windchillAvg 
        [[[barometer]]]
            source_field = pressureAvg 
        [[[rain]]]
            source_field = precipTotal 
        [[[rainRate]]]
            source_field = precipRate 
        [[[windSpeed]]]
            source_field = windspeedAvg 
        [[[windDir]]]
            source_field = winddirAvg 
        [[[windGust]]]
            source_field = windgustHigh 
        [[[radiation]]]
            source_field = solarRadiationHigh 
        [[[UV]]]
            source_field = uvHigh
